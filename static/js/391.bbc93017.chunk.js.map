{"version":3,"file":"static/js/391.bbc93017.chunk.js","mappings":"wOA6BA,I,UACA,EAAe,IAA0B,2DCzB5BA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2PAeLE,EAAmBF,EAAAA,GAAAA,OAAH,8WAKHG,GAabC,EAAwBJ,EAAAA,GAAAA,MAAH,6MAYrBK,EAAkBL,EAAAA,GAAAA,IAAH,icAmBfM,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,8K,SC1DjBQ,EAAgB,CACpBC,gBAAiB,IA4BnB,EAzBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,SAACL,EAAD,WACE,SAAC,KAAD,CAAQG,cAAeA,EAAeE,SAAUA,EAAhD,UACE,UAACJ,EAAD,CAAYK,aAAa,MAAzB,WACE,SAACT,EAAD,CAAkBU,KAAK,SAAS,aAAW,gBAA3C,UACE,SAACR,EAAD,OAGF,SAACL,EAAD,CACEa,KAAK,OACLD,aAAa,MACbE,WAAS,EACTC,YAAY,2BACZC,KAAK,4B,6BC4BjB,EApDe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAClD,GAA4BP,EAAAA,EAAAA,UAAS,MAArC,eAAOQ,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,GACJK,EAAAA,GAA0BL,GAAaM,KAAKH,KAC3C,CAACH,KAEJI,EAAAA,EAAAA,YAAU,WACHF,GAGLN,EACEM,EAAOK,KAAKC,QAAQC,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBC,MAHuC,EAAZA,aAOhC,CAACT,IAQJ,OAEE,6BACE,SAAC,EAAD,CAAWhB,SATM,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,gBACtBc,EACsB,KAApBd,EAAyB,CAAE2B,OAAQ3B,EAAgB4B,eAAkB,OAQpElB,EAAOmB,OAAS,IACf,wBACGnB,EAAOc,KAAI,SAAAM,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAML,IAAMO,MAAO,CAAEC,KAAM1B,GAAxC,SACGuB,EAAMJ,SAFFI,EAAML","sources":["icons/search.svg","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.e39a69f57d8578c5b14efbf8226ffb40.svg\";\nexport { ForwardRef as ReactComponent };","import { Field, Form } from 'formik';\n\nimport styled from 'styled-components';\nimport imgButton from 'icons/search.svg';\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(${imgButton});\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchbarStyled = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Formik } from 'formik';\nimport {\n  Input,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchbarStyled,\n  SearchForm,\n} from './Searchbar.styled';\n\nconst initialValues = {\n  searchQueryForm: '',\n};\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <SearchbarStyled>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        <SearchForm autoComplete=\"off\">\n          <SearchFormButton type=\"submit\" aria-label=\"Search images\">\n            <SearchFormButtonLabel />\n          </SearchFormButton>\n\n          <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"searchQueryForm\"\n          />\n        </SearchForm>\n      </Formik>\n    </SearchbarStyled>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Searchbar;\n","import Searchbar from 'components/Searchbar';\nimport { useState,useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport * as theMoviedbAPI from 'services/themoviedb-api';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterParam = searchParams.get('filter') ?? '';\n  const [answer, setAnswer] = useState(null);\n\n  useEffect(() => {\n    if (filterParam!==\"\"){\n    theMoviedbAPI.fetchSearch(filterParam).then(setAnswer);}\n  }, [filterParam]);\n\n  useEffect(() => {\n    if (!answer) {\n      return;\n    }\n    setMovies(\n      answer.data.results.map(({ id, title }) => {\n        return {\n          id,\n          title,\n        };\n      })\n    );\n  }, [answer]);\n\n  const handleSubmit = ({ searchQueryForm }) => {\n    setSearchParams(\n      searchQueryForm !== '' ? { filter: searchQueryForm.toLowerCase() } : {}\n    );\n  };\n\n  return (\n\n    <main>\n      <Searchbar onSubmit={handleSubmit} />\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n\n  );\n};\n\nexport default Movies;\n"],"names":["Input","styled","Field","SearchFormButton","imgButton","SearchFormButtonLabel","SearchbarStyled","SearchForm","Form","initialValues","searchQueryForm","onSubmit","autoComplete","type","autoFocus","placeholder","name","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","filterParam","get","answer","setAnswer","useEffect","theMoviedbAPI","then","data","results","map","id","title","filter","toLowerCase","length","movie","to","state","from"],"sourceRoot":""}